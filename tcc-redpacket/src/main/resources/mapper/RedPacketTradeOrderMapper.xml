<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chz.dao.RedPacketTradeOrderMapper">
  <resultMap id="BaseResultMap" type="com.chz.entity.RedPacketTradeOrder">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="SELF_USER_ID" jdbcType="BIGINT" property="selfUserId" />
    <result column="OPPOSITE_USER_ID" jdbcType="BIGINT" property="oppositeUserId" />
    <result column="MERCHANT_ORDER_NO" jdbcType="VARCHAR" property="merchantOrderNo" />
    <result column="AMOUNT" jdbcType="DECIMAL" property="amount" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="VERSION" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, SELF_USER_ID, OPPOSITE_USER_ID, MERCHANT_ORDER_NO, AMOUNT, STATUS, VERSION
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from red_trade_order
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from red_trade_order
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.chz.entity.RedPacketTradeOrder">
    insert into red_trade_order (ID, SELF_USER_ID, OPPOSITE_USER_ID, 
      MERCHANT_ORDER_NO, AMOUNT, STATUS, 
      VERSION)
    values (#{id,jdbcType=BIGINT}, #{selfUserId,jdbcType=BIGINT}, #{oppositeUserId,jdbcType=BIGINT}, 
      #{merchantOrderNo,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{status,jdbcType=VARCHAR}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.chz.entity.RedPacketTradeOrder">
    insert into red_trade_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="selfUserId != null">
        SELF_USER_ID,
      </if>
      <if test="oppositeUserId != null">
        OPPOSITE_USER_ID,
      </if>
      <if test="merchantOrderNo != null">
        MERCHANT_ORDER_NO,
      </if>
      <if test="amount != null">
        AMOUNT,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="version != null">
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="selfUserId != null">
        #{selfUserId,jdbcType=BIGINT},
      </if>
      <if test="oppositeUserId != null">
        #{oppositeUserId,jdbcType=BIGINT},
      </if>
      <if test="merchantOrderNo != null">
        #{merchantOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chz.entity.RedPacketTradeOrder">
    update red_trade_order
    <set>
      <if test="selfUserId != null">
        SELF_USER_ID = #{selfUserId,jdbcType=BIGINT},
      </if>
      <if test="oppositeUserId != null">
        OPPOSITE_USER_ID = #{oppositeUserId,jdbcType=BIGINT},
      </if>
      <if test="merchantOrderNo != null">
        MERCHANT_ORDER_NO = #{merchantOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chz.entity.RedPacketTradeOrder">
    update red_trade_order
    set SELF_USER_ID = #{selfUserId,jdbcType=BIGINT},
      OPPOSITE_USER_ID = #{oppositeUserId,jdbcType=BIGINT},
      MERCHANT_ORDER_NO = #{merchantOrderNo,jdbcType=VARCHAR},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>